# generated by claude.ai 
# https://claude.ai/chat/12272244-c5a0-4435-94f5-46437401866b

def fen_to_ascii(fen)
  # Split FEN string to get board position (first part before space)
  position = fen.split(' ').first
  
  # Initialize the ASCII board with borders
  ascii_board = "   +---+---+---+---+---+---+---+---+\n"
  
  # Unicode chess pieces mapping
  pieces = {
    'k' => 'k', 'q' => 'q', 'r' => 'r', 'b' => 'b', 'n' => 'n', 'p' => 'p',
    'K' => 'K', 'Q' => 'Q', 'R' => 'R', 'B' => 'B', 'N' => 'N', 'P' => 'P'
  }
  
  # Process each rank (starting from 8th rank as per FEN)
  ranks = position.split('/')
  ranks.each_with_index do |rank, i|
    rank_number = 8 - i
    ascii_board += " #{rank_number} |"
    
    # Process each piece or empty square in the rank
    position = 0
    rank.each_char do |char|
      if char.match?(/\d/)
        # Add empty squares
        char.to_i.times do
          ascii_board += " #{position % 2 == 0 ? ' ' : '.'} |"
          position += 1
        end
      else
        # Add piece
        ascii_board += " #{pieces[char]} |"
        position += 1
      end
    end
    ascii_board += "\n   +---+---+---+---+---+---+---+---+\n"
  end
  
  # Add file labels (a-h)
  ascii_board += "     a   b   c   d   e   f   g   h\n"
  
  ascii_board
end

if $0 == __FILE__
  puts "command line"
  puts fen_to_ascii("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1")
  puts fen_to_ascii("rnbqk2r/pp3ppp/2pp1n2/2b1p3/2B1P3/2NP1N2/PPP2PPP/R1BQ1RK1 b kq - 1 6")
end

